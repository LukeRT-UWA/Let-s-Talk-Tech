[{"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\index.js":"1","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\App.js":"2","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\navBar.js":"4","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\NavBar.js":"5","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\Home.js":"6","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\Articles.js":"7","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\SingleArticle.js":"8","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\utils\\queries.js":"9","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CategoryList.js":"10","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\ArticleList.js":"11","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CommentList.js":"12","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CategoryForm.js":"13","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\utils\\mutations.js":"14","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\ArticleForm.js":"15","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CommentForm.js":"16","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\LoginModal.js":"17","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\SignupModal.js":"18","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\utils\\auth.js":"19","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\About.js":"20"},{"size":551,"mtime":1636268685625,"results":"21","hashOfConfig":"22"},{"size":1412,"mtime":1636285118301,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":1635157656830,"results":"24","hashOfConfig":"22"},{"size":508,"mtime":1635769360521,"results":"25","hashOfConfig":"22"},{"size":982,"mtime":1636368140006,"results":"26","hashOfConfig":"22"},{"size":1127,"mtime":1636284607982,"results":"27","hashOfConfig":"22"},{"size":1386,"mtime":1636375833230,"results":"28","hashOfConfig":"22"},{"size":1880,"mtime":1636284638670,"results":"29","hashOfConfig":"22"},{"size":1266,"mtime":1636375255565,"results":"30","hashOfConfig":"22"},{"size":1033,"mtime":1636284583066,"results":"31","hashOfConfig":"22"},{"size":1107,"mtime":1636291895612,"results":"32","hashOfConfig":"22"},{"size":1222,"mtime":1636372084345,"results":"33","hashOfConfig":"22"},{"size":3314,"mtime":1636370905139,"results":"34","hashOfConfig":"22"},{"size":1353,"mtime":1636372191910,"results":"35","hashOfConfig":"22"},{"size":3883,"mtime":1636370923223,"results":"36","hashOfConfig":"22"},{"size":2811,"mtime":1636372990056,"results":"37","hashOfConfig":"22"},{"size":2411,"mtime":1636369168810,"results":"38","hashOfConfig":"22"},{"size":2365,"mtime":1636368691702,"results":"39","hashOfConfig":"22"},{"size":720,"mtime":1635157656846,"results":"40","hashOfConfig":"22"},{"size":1220,"mtime":1636289591427,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"mq52eg",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\index.js",[],["88","89"],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\App.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\reportWebVitals.js",[],["90","91"],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\navBar.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\NavBar.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\Home.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\Articles.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\SingleArticle.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\utils\\queries.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CategoryList.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\ArticleList.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CommentList.js",["92","93"],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CategoryForm.js",["94"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport LoginModal from \"./LoginModal\"\r\nimport { CREATE_CATEGORY } from '../utils/mutations';\r\nimport { QUERY_CATEGORIES } from '../utils/queries';\r\nimport { Card, Form, Button, Input, TextArea, Message, Grid } from 'semantic-ui-react'\r\n\r\nimport Auth from '../utils/auth';\r\n\r\nconst styles = {\r\n  cardStyle:{\r\n    marginTop: '10px',\r\n    padding: '20px',\r\n    textAlign: \"center\",\r\n    position: 'fixed',\r\n    bottom: '10px',\r\n    left: '35%',\r\n    width: '30%'\r\n  },\r\n  inputStyle: {\r\n    maxHeight: '100px',\r\n    width:'100%',\r\n    paddingBottom: '10px'\r\n  },\r\n  buttonStyle: {\r\n    marginTop: '10px'\r\n  }\r\n}\r\n\r\nconst CategoryForm = () => {\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const [createCategory, { error }] = useMutation(CREATE_CATEGORY, {\r\n    update(cache, { data: { createCategory } }) {\r\n      try {\r\n        const { categories } = cache.readQuery({ query: QUERY_CATEGORIES });\r\n\r\n        cache.writeQuery({\r\n          query: QUERY_CATEGORIES,\r\n          data: { categories: [createCategory, ...categories] },\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n    \r\n    try {\r\n      const { data } = await createCategory({\r\n        variables: {name, description},\r\n      });\r\n\r\n\r\n      setName('');\r\n      setDescription('')\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'categoryName') {\r\n        setName(value)\r\n    }\r\n    else if (name === 'categoryDescription') {\r\n        setDescription(value)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card color='red' fluid centered style={styles.cardStyle}>\r\n      \r\n      {Auth.loggedIn() ? (\r\n       \r\n          <Form\r\n            onSubmit={handleFormSubmit}\r\n          >\r\n             <Grid celled='internally'columns={2} relaxed='very'>\r\n            <Grid.Column>\r\n            <div>\r\n            <Input style={styles.inputStyle}\r\n                name=\"categoryName\"\r\n                placeholder=\"Category Name\"\r\n                value={name}\r\n                onChange={handleChange}\r\n            />\r\n            </div>\r\n            <div>\r\n            <TextArea style={styles.inputStyle}\r\n                name=\"categoryDescription\"\r\n                placeholder=\"Category Description\"\r\n                value={description}\r\n                onChange={handleChange}\r\n            />\r\n            </div>\r\n            </Grid.Column>\r\n\r\n            <Grid.Column verticalAlign='middle'>  \r\n            <div>\r\n            \r\n            <Button content=\"Add Category\" icon=\"add square\" style={styles.buttonStyle}/>\r\n            </div>\r\n            {error && (\r\n              <Message>\r\n                <p>{error.message}</p>\r\n              </Message>\r\n            )}\r\n            </Grid.Column>\r\n            </Grid>\r\n          </Form>\r\n          \r\n      ) : (\r\n        \r\n        <p>\r\n          You need to be logged in to add a category. Please <LoginModal /> to add a category.\r\n        </p>\r\n        \r\n      )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryForm;\r\n","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\ArticleForm.js",["95"],"import React, { useState } from 'react';\r\nimport { useMutation } from '@apollo/client';\r\nimport LoginModal from \"./LoginModal\"\r\nimport { ADD_ARTICLE } from '../utils/mutations';\r\nimport { QUERY_ARTICLES_ONLY } from '../utils/queries';\r\nimport { Card, Input, TextArea, Form, Button, Message, Grid} from 'semantic-ui-react'\r\nimport Auth from '../utils/auth';\r\n\r\nconst styles = {\r\n  cardStyle:{\r\n    marginTop: '10px',\r\n    padding: '20px',\r\n    textAlign: \"center\",\r\n    position: 'fixed',\r\n    bottom: '10px',\r\n    left: '35%',\r\n    width: '30%'\r\n  },\r\n  inputStyle: {\r\n    maxHeight: '100px',\r\n    width:'100%',\r\n    paddingBottom: '10px'\r\n  },\r\n  buttonStyle: {\r\n    marginTop: '10px'\r\n  }\r\n}\r\n\r\nconst ArticleForm = ({ categoryId }) => {\r\n  const [title, setTitle] = useState('');\r\n  const [link, setLink] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const [createArticle, { error }] = useMutation(ADD_ARTICLE, {\r\n    update(cache, { data: { createArticle } }) {\r\n      try {\r\n        const { articles } = cache.readQuery({ \r\n          query: QUERY_ARTICLES_ONLY,\r\n          variables: { categoryId } });\r\n          console.log(articles)\r\n        cache.writeQuery({\r\n          query: QUERY_ARTICLES_ONLY,\r\n          data: { articles: [createArticle, ...articles] },\r\n          variables: { categoryId }\r\n        });\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n\r\n    },\r\n  });\r\n\r\n  const handleFormSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const { data } = await createArticle({\r\n        variables: {categoryId, title, link, description},\r\n      });\r\n\r\n\r\n      setTitle('');\r\n      setLink('');\r\n      setDescription('');\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n\r\n    if (name === 'articleName') {\r\n        setTitle(value)\r\n    }\r\n    else if (name === 'articleLink') {\r\n        setLink(value)\r\n    }\r\n    else if (name === 'articleDescription') {\r\n        setDescription(value)\r\n  }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Card style={styles.cardStyle} color='red' fluid centered >\r\n\r\n      {Auth.loggedIn() ? (\r\n        <>\r\n          <Form\r\n            \r\n            onSubmit={handleFormSubmit}\r\n          >\r\n            <Grid celled='internally' columns={2} relaxed='very'>\r\n            <Grid.Column>\r\n            <div>\r\n            <Input\r\n                name=\"articleName\"\r\n                placeholder=\"Article Title\"\r\n                value={title}\r\n                style={styles.inputStyle}\r\n                onChange={handleChange}\r\n            />\r\n            </div>\r\n            <div>\r\n            <Input\r\n                name=\"articleLink\"\r\n                placeholder=\"Link to article\"\r\n                value={link}\r\n                style={styles.inputStyle}\r\n                onChange={handleChange}\r\n            />\r\n            \r\n            </div>\r\n            <div>\r\n            <TextArea\r\n                name=\"articleDescription\"\r\n                placeholder=\"Article Description\"\r\n                value={description}\r\n                style={styles.inputStyle}\r\n                onChange={handleChange}\r\n            />\r\n            \r\n            </div>\r\n            </Grid.Column>\r\n            <Grid.Column verticalAlign='middle'>\r\n            <div>\r\n            <Button style={styles.buttonStyle} icon=\"add square\" content=\"Add Article\"/>\r\n            </div>\r\n            {error && (\r\n              <Message>\r\n                <p>{error.message}</p>\r\n              </Message>\r\n            )}\r\n\r\n            </Grid.Column>\r\n          </Grid>\r\n          </Form>\r\n        </>\r\n      ) : (\r\n        <p>\r\n          You need to be logged in add an article. Please <LoginModal /> to add an article.\r\n        </p>\r\n      )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ArticleForm;\r\n","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\CommentForm.js",["96"],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\LoginModal.js",["97"],"import React, { useState } from 'react'\r\nimport { Modal, Button, Grid, Form, Segment, Divider, Message } from 'semantic-ui-react'\r\nimport SignupModal from \"./SignupModal\"\r\nimport { LOGIN_USER } from '../utils/mutations';\r\nimport { useMutation } from '@apollo/client';\r\nimport Auth from '../utils/auth';\r\n\r\nfunction LoginModal() {\r\n    const [open, setOpen] = React.useState(false)\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    \r\n    const [login, { error, data }] = useMutation(LOGIN_USER);\r\n    \r\n    const handleFormSubmit = async (event) => {\r\n      event.preventDefault();\r\n      try {\r\n        const { data } = await login({\r\n          variables: { username, password },\r\n        });\r\n  \r\n        Auth.login(data.login.token);\r\n        setOpen(false);\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    };\r\n    \r\n    const handleChange = (event) => {\r\n      const { name, value } = event.target;\r\n  \r\n      if (name === 'username') {\r\n          setUsername(value)\r\n      }\r\n      else if (name === 'password') {\r\n          setPassword(value)\r\n      }\r\n    };\r\n\r\n    return (\r\n      <Modal\r\n        onClose={() => setOpen(false)}\r\n        onOpen={() => setOpen(true)}\r\n        open={open}\r\n        trigger={<Button content =\"Login\" icon=\"user\" size=\"medium\" />}\r\n      >\r\n        <Segment placeholder>\r\n    <Grid columns={2} relaxed='very'>\r\n      <Grid.Column>\r\n        <Form onSubmit={handleFormSubmit}>\r\n          <Form.Input\r\n            name='username'\r\n            icon='user'\r\n            iconPosition='left'\r\n            label='Username'\r\n            placeholder='Username'\r\n            value={username}\r\n            onChange={handleChange}\r\n          />\r\n          <Form.Input\r\n            name='password'\r\n            icon='lock'\r\n            iconPosition='left'\r\n            label='Password'\r\n            type='password'\r\n            value={password}\r\n            onChange={handleChange}\r\n          />\r\n\r\n          <Button content='Login' primary />\r\n          {error && (\r\n              <Message>\r\n                {error.message}\r\n              </Message>\r\n            )}\r\n        </Form>\r\n      </Grid.Column>\r\n\r\n      <Grid.Column verticalAlign='middle'>\r\n        <SignupModal />\r\n      </Grid.Column>\r\n    </Grid>\r\n\r\n    <Divider vertical>Or</Divider>\r\n  </Segment>\r\n      </Modal>\r\n    )\r\n  }\r\n\r\nexport default LoginModal","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\components\\SignupModal.js",["98"],"import React, { useState } from 'react'\nimport { Modal, Button, Grid, Form, Segment, Divider, Message} from 'semantic-ui-react'\nimport { ADD_USER } from '../utils/mutations';\nimport { useMutation } from '@apollo/client';\nimport Auth from '../utils/auth';\n\nfunction SignupModal() {\n    const [open, setOpen] = React.useState(false)\n    const [username, setUsername] = useState('')\n    const [password, setPassword] = useState('')\n    \n    const [addUser, { error, data }] = useMutation(ADD_USER);\n    \n    const handleFormSubmit = async (event) => {\n      event.preventDefault();\n      try {\n        const { data } = await addUser({\n          variables: { username, password },\n        });\n  \n        Auth.login(data.addUser.token);\n        setOpen(false);\n      } catch (e) {\n        console.error(e);\n      }\n    };\n    \n    const handleChange = (event) => {\n      const { name, value } = event.target;\n  \n      if (name === 'username') {\n          setUsername(value)\n      }\n      else if (name === 'password') {\n          setPassword(value)\n      }\n    };\n\n    return (\n      <Modal \n        onClose={() => setOpen(false)}\n        onOpen={() => setOpen(true)}\n        open={open}\n        trigger={<Button content =\"Sign up\" icon=\"signup\" size=\"big\"/>}\n      >\n        <Segment placeholder>\n    <Grid columns={2} relaxed='very'>\n\n\n      <Grid.Column verticalAlign='middle'>\n        <Button content =\"Login\" icon=\"user\" size=\"big\" onClick={() => setOpen(false)}/>\n      </Grid.Column>\n\n      <Grid.Column>\n        <Form onSubmit={handleFormSubmit}>\n          <Form.Input\n            name='username'\n            icon='user'\n            iconPosition='left'\n            label='Username'\n            placeholder='Username'\n            value={username}\n            onChange={handleChange}\n          />\n          <Form.Input\n            name='password'\n            icon='lock'\n            iconPosition='left'\n            label='Password'\n            type='password'\n            value={password}\n            onChange={handleChange}\n          />\n\n          <Button content='Register' primary />\n          {error && (\n              <Message>\n                <p>{error.message}</p>\n              </Message>\n            )}\n        </Form>\n      </Grid.Column>\n\n    </Grid>\n\n    <Divider vertical>Or</Divider>\n  </Segment>\n      </Modal>\n    )\n  }\n\nexport default SignupModal\n","C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\utils\\auth.js",[],"C:\\Users\\Luke_\\OneDrive\\Desktop\\UWA\\Let-s-Talk-Tech\\client\\src\\pages\\About.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":14},{"ruleId":"105","severity":1,"message":"109","line":3,"column":16,"nodeType":"107","messageId":"108","endLine":3,"endColumn":23},{"ruleId":"105","severity":1,"message":"110","line":54,"column":15,"nodeType":"107","messageId":"108","endLine":54,"endColumn":19},{"ruleId":"105","severity":1,"message":"110","line":57,"column":15,"nodeType":"107","messageId":"108","endLine":57,"endColumn":19},{"ruleId":"105","severity":1,"message":"110","line":54,"column":15,"nodeType":"107","messageId":"108","endLine":54,"endColumn":19},{"ruleId":"105","severity":1,"message":"110","line":13,"column":28,"nodeType":"107","messageId":"108","endLine":13,"endColumn":32},{"ruleId":"105","severity":1,"message":"110","line":12,"column":30,"nodeType":"107","messageId":"108","endLine":12,"endColumn":34},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],["111"],["112"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]